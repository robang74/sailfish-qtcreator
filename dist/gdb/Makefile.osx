broot=${PWD}
PATCHDIR?=${broot}/patches
source=${broot}/source
targets=i486-meego-linux-gnu,armv7hl-meego-linux-gnueabi,aarch64-meego-linux-gnu
staging=${broot}/staging
pyversion_minor=2.7
pyversion_micro=15
pyversion=${pyversion_minor}.${pyversion_micro}
expatversion=2.1.1
arch=`uname -sm | sed 's/ /-/g' | tr A-Z a-z`
version=12.1
targetdir=${broot}/qtcreator-gdb-${version}
packagename=sailfish-gdb-${version}-mac.7z

ifeq ($(DOWNLOAD_URL),)
	DL_GDB=http://ftp.gnu.org/gnu/gdb
	DL_PYTHON=http://www.python.org/ftp/python/${pyversion}
	DL_EXPAT=http://sourceforge.net/projects/expat/files/expat/${expatversion}
else
	DL_GDB=$(DOWNLOAD_URL)
	DL_EXPAT=$(DOWNLOAD_URL)
	DL_PYTHON=$(DOWNLOAD_URL)
endif

all:package

clean:
	rm -rf  ${broot}/qtcreator-gdb-* ${staging}/gdb-* sailfish-gdb-*.7z

makesourcedir:
	@test -e ${source} || mkdir ${source}

maketargetdir:
	@test -e ${targetdir} || mkdir ${targetdir}
	@test -e ${targetdir}/bin || mkdir ${targetdir}/bin
	@test -e ${targetdir}/share || mkdir ${targetdir}/share

makestagingdir:
	@test -e ${staging} || mkdir ${staging}

${source}/expat-${expatversion}.tar.bz2: | makesourcedir
	cd ${source} && \
	echo "Downloading expat..." && \
	curl -LsOf $(DL_EXPAT)/expat-${expatversion}.tar.bz2 && \
	touch ${source}/expat-${expatversion}.tar.bz2

${source}/Python-${pyversion}.tgz: | makesourcedir
	cd ${source} && \
	echo "Downloading python..." && \
	curl -Osf $(DL_PYTHON)/Python-${pyversion}.tgz && \
	touch ${source}/Python-${pyversion}.tgz

${source}/gdb-${version}.tar.xz: | makesourcedir
	cd ${source} && \
	echo "Downloading gdb..." && \
	curl -Osf $(DL_GDB)/gdb-${version}.tar.xz || \
	curl -osf gdb-${version}.tar.xz $(DL_GDB)/gdb-${version}a.tar.xz && \
	touch gdb-*.tar.xz

${staging}/lib/libexpat.a: ${source}/expat-${expatversion}.tar.bz2 | makestagingdir
	cd ${staging} && \
	echo "Extracting expat..." && \
	tar xf ${source}/expat-${expatversion}.tar.bz2 && cd expat-${expatversion} && \
	./configure --disable-shared -prefix=${staging} && \
	${MAKE} -j$(shell getconf _NPROCESSORS_ONLN) && ${MAKE} install

${staging}/lib/libpython${pyversion_minor}.a: ${source}/Python-${pyversion}.tgz | makestagingdir
	unset PYTHONHOME && \
	cd ${staging} && \
	echo "Extracting python..." && \
	tar xf ${source}/Python-${pyversion}.tgz && cd Python-${pyversion} && \
	./configure --prefix=${staging} && ${MAKE} -j$(shell getconf _NPROCESSORS_ONLN) && ${MAKE} install

${targetdir}/bin/python/include/python${pyversion_minor}/pyconfig.h: ${staging}/lib/libpython${pyversion_minor}.a | maketargetdir
	mkdir -p ${targetdir}/bin/python/lib && cp -a ${staging}/lib/python${pyversion_minor} ${targetdir}/bin/python/lib/
	mkdir -p ${targetdir}/bin/python/include/python${pyversion_minor} && cp ${staging}/include/python${pyversion_minor}/pyconfig.h ${targetdir}/bin/python/include/python${pyversion_minor}/

${staging}/gdb-${version}/configure: ${source}/gdb-${version}.tar.xz | makestagingdir
	cd ${staging} && \
	echo "Extracting gdb..." && \
	tar xf ${source}/gdb-${version}.tar.xz && \
	cd gdb-${version} && \
	touch configure && \
	touch -d "$$(date -v+1d "+%Y-%m-%dT%H:%M:%S")" bfd/doc/bfd.info && \
	patch -p1 < ${PATCHDIR}/gdb-basename-mac.patch && \
	patch -p1 < ${PATCHDIR}/pythonhome-7.4_mac.patch

${targetdir}/bin/gdb: ${staging}/gdb-${version}/configure ${staging}/lib/libpython${pyversion_minor}.a ${staging}/lib/libexpat.a | maketargetdir
	test -e ${staging}/gdb-${version}-build || mkdir ${staging}/gdb-${version}-build
	export PYTHONHOME=${staging} && \
	export PATH="${staging}/bin/:$$PATH" && \
	cd ${staging}/gdb-${version}-build && \
	${staging}/gdb-${version}/configure --disable-nls --enable-targets=${targets} --with-separate-debug-dir="" \
        --with-gdb-datadir='$$prefix/share/gdb' \
        --disable-werror --with-python=${staging} --with-libexpat-prefix=${staging} && \
	${MAKE} -j$(shell getconf _NPROCESSORS_ONLN) && \
	strip -o ${targetdir}/bin/gdb gdb/gdb

package: ${targetdir}/bin/gdb ${targetdir}/bin/python/include/python${pyversion_minor}/pyconfig.h
	{ ! test -e ${targetdir}/share/gdb || rm -r ${targetdir}/share/gdb; } && \
	mkdir -p ${targetdir}/share/gdb && \
	cp -a ${staging}/gdb-${version}-build/gdb/data-directory/{python,syscalls} ${targetdir}/share/gdb
	echo "Packing..."
	7z a ${packagename} ${targetdir}/*
